{"version":3,"file":"static/js/734.a89de5dd.chunk.js","mappings":"+QAQaA,EAAc,mCAAG,WAAOC,GAAP,yFAIpBC,EAJoB,UALb,qCAKa,YAICD,EAJD,4BAJd,oCAIc,SAKVE,IAAAA,IAAUD,GALA,cAKpBE,EALoB,yBAMnBA,EAAEC,MANiB,gCAQ1BC,QAAQC,MAAM,SAAU,KAAMC,SARJ,yDAAH,sDCP3B,GAAiB,E,SC6DjB,EAtDa,WACX,IAAQP,GAAOQ,EAAAA,EAAAA,MAAPR,GACR,GAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAiBA,IAfAC,EAAAA,EAAAA,YAAU,WACRb,EAAeC,GACZa,MAAK,SAAAV,GACAO,EAAKI,QAGTH,GAAQ,WACN,OAAO,OAAIR,EAAEO,KACd,GACF,GAEJ,GAAE,CAACV,EAAIU,IAERL,QAAQU,IAAIL,GAEPA,EAAKI,OAIV,OACE,iCACE,kCACA,eAAIE,UAAWC,EAAAA,KAAf,SACGP,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,UAAWnB,EAAd,EAAcA,GAAIoB,EAAlB,EAAkBA,cAAeC,EAAjC,EAAiCA,aAAjC,OACR,gBAAaL,UAAWC,EAAAA,KAAxB,UACGI,IACC,gBACEC,MAAM,MACNC,IAAG,yCAAoCF,GACvCG,IAAKJ,KAGT,uBAAIA,KACJ,uBAAID,MATGnB,EADD,QAgBjB,C","sources":["components/service/getMovieCredits .js","components/module/Cast.module.css","components/module/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\n//https://api.themoviedb.org/3/movie/272/credits?api_key=39fe5b73f599338374afe8e26b8126d9\nconst BASE_URL = 'https://api.themoviedb.org/3/movie';\nconst API_KEY = '39fe5b73f599338374afe8e26b8126d9';\n\n\n\nexport const getMoviCredits = async (id) => {\n \n  try {\n    // const URL ='https://api.themoviedb.org/3/movie/272/credits?api_key=39fe5b73f599338374afe8e26b8126d9'\n    const URL = `${BASE_URL}/${id}/credits?api_key=${API_KEY}`\n    const r = await axios.get(URL);\n    return r.data;\n  } catch (error) {\n    console.error('Error:', error.message);\n  }\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMoviCredits } from '../service/getMovieCredits ';\nimport PropTypes from 'prop-types'\nimport s from './Cast.module.css'\n\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getMoviCredits(id)\n      .then(r => {\n        if (cast.length) {\n          return;\n        }\n        setCast(() => {\n          return [...r.cast]\n        })\n      })\n      \n  }, [id, cast]);\n\n  console.log(cast);\n\n  if (!cast.length) {\n    return;\n  }\n\n  return (\n    <>\n      <h3>Cast</h3>\n      <ul className={s.list}>\n        {cast.map(({ character, id, original_name, profile_path }) => (\n          <li key={id} className={s.item}>\n            {profile_path && (\n              <img\n                width=\"120\"\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={original_name}\n              />\n            )}\n            <p>{original_name}</p>\n            <p>{character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.shape({\n    character: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    original_name: PropTypes.string.isRequired,\n    profile_path: PropTypes.string.isRequired,\n  })\n  }\n\nexport default Cast;\n"],"names":["getMoviCredits","id","URL","axios","r","data","console","error","message","useParams","useState","cast","setCast","useEffect","then","length","log","className","s","map","character","original_name","profile_path","width","src","alt"],"sourceRoot":""}