{"version":3,"file":"static/js/603.bd25cd1f.chunk.js","mappings":"+QASaA,EAAe,mCAAG,WAAOC,GAAP,yFAGrBC,EAHqB,UALjB,qCAKiB,YAGAD,EAHA,4BAJf,oCAIe,SAIXE,IAAAA,IAAUD,GAJC,cAIrBE,EAJqB,yBAKpBA,EAAEC,MALkB,gCAO3BC,QAAQC,MAAM,SAAU,KAAMC,SAPH,yDAAH,sD,SCwC5B,EA5CgB,WACd,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOJ,EAAP,KAAaK,EAAb,KACQT,GAAOU,EAAAA,EAAAA,MAAPV,GAYR,OAVAW,EAAAA,EAAAA,YAAU,WAERZ,EAAgBC,GAAIY,MAAK,SAAAT,GACvBM,GAAQ,WACN,OAAO,OAAIN,EAAEU,QACd,GACF,GACF,GAAE,CAACb,KAIF,8BACGI,EAAKU,OAAS,GACb,wBACGV,EAAKW,KAAI,SAAAC,GACR,OACE,2BACE,wBAAKA,EAAKC,UACV,uBAAID,EAAKE,YAFFF,EAAKhB,GAKjB,OAGH,sEAIP,C","sources":["components/service/getMovieReviews.js","components/module/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\n//https://api.themoviedb.org/3/movie/272/reviews?api_key=39fe5b73f599338374afe8e26b8126d9\n\nconst BASE_URL = `https://api.themoviedb.org/3/movie`;\nconst API_KEY = '39fe5b73f599338374afe8e26b8126d9';\n\n\n\nexport const getMovieReviews = async (id) => {\n \n  try {\n    const URL = `${BASE_URL}/${id}/reviews?api_key=${API_KEY}`\n    const r = await axios.get(URL);\n    return r.data;\n  } catch (error) {\n    console.error('Error:', error.message);\n  }\n};\n\n\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../service/getMovieReviews';\nimport PropTypes from 'prop-types'\n\nconst Reviews = () => {\n  const [data, setData] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n   \n    getMovieReviews(id).then(r => {\n      setData(() => {\n        return [...r.results];\n      });\n    });\n  }, [id]);\n\n  // console.log(data);\n  return (\n    <>\n      {data.length > 0 ? (\n        <ul>\n          {data.map(item => {\n            return (\n              <li key={item.id}>\n                <h3>{item.author}</h3>\n                <p>{item.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movies</p>\n      )}\n    </>\n  );\n};\n\n\nReviews.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n  })\n}\n\n\nexport default Reviews"],"names":["getMovieReviews","id","URL","axios","r","data","console","error","message","useState","setData","useParams","useEffect","then","results","length","map","item","author","content"],"sourceRoot":""}